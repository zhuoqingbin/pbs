syntax = "proto3";
option go_package = "github.com/zhuoqingbin/pbs/evsepb";

package evsepb;

// 产品型号信息
message EvseModel {
    uint64 id = 1; // 设备型号ID
    string Vendor = 2;  // 设备厂商
	string Model = 3;  // 型号
	string Product = 4; // 产品系列
	EvseStandard standard = 5; // 设备标准
    EvsePhase phase = 6; // 相
	int32 rated_voltage = 7; // 额定电压 (单位: V)
	int32 rated_current = 8; // 额定电流 (单位: A)
	int32 rated_power = 9; // 额定功率 (单位: W)
	UseVehicleType use_vehicle_type = 10; // 使用车型
	EvseCurrentType evse_current_type = 11; // 设备电流类型(交/直流)
    uint64 link_evse_id = 12; //关联设备ID
}

// EvseState 状态
enum EvseState {
    ES_NONACTIVATED   = 0; // 未知, （说明设备未上线过）
    ES_OFFLINE   = 1; // 离线
	ES_ONLINE    = 2;  // 在线
    ES_EXCEPTION = 3; // 故障
}


// ConnectorState 状态
enum ConnectorState {
    CS_Unavailable = 0;    //不可用
    CS_Available = 1;      // 空闲
    CS_Preparing = 2;      // 已连接，未开启充电会话
    CS_Charging = 3;       // 充电中
    CS_SuspendedEVSE = 4;  // 充电已开启，但充电桩还未输出
    CS_SuspendedEV = 5;    // 充电已开启，电动汽车还未充电
    CS_Finishing = 6;      // 充电完成，还处于占用状态
    CS_Reserved = 7;       // 预约
    CS_Faulted = 8;        // 故障
    CS_Waiting = 9;        // 定时充电等待、轮充等待等
    CS_Occupied = 10;      // 设备占用中，不知道是什么状态
}



// EvseProtocolVendor 设备协议类型
enum EvseProtocolVendor {
    EPV_UNKNOWN = 0;
    EPV_GOIOT = 1; // goiot协议
    EPV_SINEXCEL = 2; // 盛泓协议
    EPV_SZUNIT = 3; // 永联协议
    EPV_YKC = 4; // 云快充协议
    EPV_HKC = 5; // 好快充协议
    EPV_OCPP = 6; // OCPP协议
    EPV_BLUETOOTH = 7; // 蓝牙协议
}


// EvseStandard 设备标准
enum EvseStandard {
    ES_UNKNOWN = 0;
    ES_CHINESE = 1; // 国标
    ES_AMERICAN = 2; // 美标
    ES_EUROPEAN = 4; // 欧标
}

// EvsePhase 设备相数
enum EvsePhase {
    EP_UNKNOWN = 0;
    EP_ONE = 1; // 单相
    EP_THREE = 3; // 三相
}


// 设备运营类型
enum EvseOperationType {
    EOT_UNKNOWN = 0;
    EOT_HOME = 1; // 家充设备
    EOT_OPERATOR =2; // 运营设备
}

// UseVehicleType 设备使用车辆类型
enum UseVehicleType {
    UVT_UNKNOWN = 0;
    UVT_CART = 1;
    UVT_BIKE = 2;
}
// EvseCurrentType 汽车电流类型
enum EvseCurrentType {
    ECT_UNKNOWN = 0; // 
    ECT_AC = 1; // 交流
    ECT_DC = 2; // 直流
}


enum EvseOrderState {
    // 整数表示正常状态, 其他的表示异常
    EOS_UnknownSuspend                 = 0;     // 枪头未知原因导致订单挂起
  
    EOS_Pending                        = 10;    // 订单等待处理
    EOS_RemoteStartReject              = 11;    // 设备拒绝启动充电（马上退款）
    EOS_RemoteStartTimeout             = 12;    // 启动充电超时（马上退款）
    EOS_RemoteStartConfTimeout         = 13;    // 启动充电回复超时（原是马上退款，先修改成3天内退款）
    EOS_RemoteStartFail                = 14;    // 启动充电失败，后台导致的（马上退款）
  
    EOS_RemoteStarted                  = 30;    // 启动充电成功，等待连接
    EOS_ConnectTimeout                 = 31;    // 连接超时（3天内退款）
    EOS_ConnectorUnavailableSuspend    = 32;    // 枪头不可用导致订单挂起
  
    EOS_Charging                       = 50;    // 连接成功，充电中
    EOS_ConnectorDiffSessionSuspend    = 51;    // 枪头的订单会话不一致导致挂起
    EOS_ConnectorAvailableSuspend      = 52;    // 枪头空闲可用导致订单挂起
    EOS_ConnectorFaultSuspend          = 53;    // 枪头故障导致订单挂起
    EOS_ConnectorOfflineSuspend        = 54;    // 枪头离线导致订单挂起
 
    EOS_RemoteStopped                  = 70;    // 结束充电请求成功
    EOS_RemoteStopTimeout              = 71;    // 结束充电超时
    
    EOS_Stopped                        = 90;    // 结束充电成功，等待计费结果
    EOS_CostConflict                   = 91;    // 费用冲突
    
    EOS_Finish                         = 100;   // 充电完成
}


// EvseOccupyOrderState 设备占用状态
enum EvseOccupyOrderState {
    EOOS_INIT = 0; // 初始化状态
    EOOS_OCCUPYING = 50; // 占庄中
    EOOS_FINISH = 100; // 占庄完成
}

// 设备订单分段标签
enum EvseOrderSectionTag {
    OST_UNKNOWN = 0; // 未知
    OST_PEAK    = 1; // 尖
    OST_SHARP   = 2; // 峰
    OST_FLAT    = 3; // 平
    OST_VALLEY  = 4; // 谷
}



// 授权启动充电方式
enum AuthorizationMode {   
    AM_LOCAL_PLUG = 0; // 本地即插即充启动
    AM_LOCAL_ADMIN = 1; // 本地管理员启动
    AM_LOCAL_IDENTITY_CARD = 2; // 鉴权卡刷卡本地鉴权启动
    AM_ONLINE_IDENTITY_CARD = 3; // 鉴权卡刷卡在线鉴权启动
    AM_LOCAL_WALLET_CARD = 4; // 本地钱包卡刷卡启动
    AM_LOCAL_VIN = 5; // 车辆VIN本地鉴权启动
    AM_ONLINE_VIN = 6; // 车辆VIN在线鉴权启动
    AM_BLUETOOTH = 7; // 本地通过蓝牙启动
    AM_MAC = 8; // 本地通过输入校验码启动
    AM_REMOTE_ADMIN = 9; // 远程管理员启动
    AM_REMOTE_USER = 10; // 远程用户启动
}

// ServiceMode 充电桩服务模式
enum ServiceMode {
    SM_AUTO_CHARGE = 0;      // 自动充满模式
    SM_CHARGE_BY_ELEC = 1;    // 预设电量充电模式
    SM_CHARGE_BY_TIME = 2;    // 预设时间充电模式
    SM_CHARGE_BY_MONEY = 3;   // 预设金额充电模式
    SM_DISCHARGE_BY_ELEC = 4; // 按电量放电
    SM_AUTO_DISCHARGE = 5;   // 自动放电
}


// 请求消息充电停止原因定义
enum StopReason {
    SR_Normal = 0;                   // 按照服务类型（按电量充电，按时长充电，按金额充电, BMS正常结束等）正常停止充电。
    SR_Local_Card = 1;                // 用户本地刷卡停止充电
    SR_LocalPIN = 2;                 // 用户本地输入校验码停止充电
    SR_RemoteUser = 3;               // 用户远程结束
    SR_RemoteAdmin = 4;              // 管理员远程结束
    SR_EmergencyStop = 5;            // 急停按下，停止充电
    SR_EVDisconnected = 6;           // 检测到枪头断开，停止充电
    SR_Reboot = 7;                   // 系统重启停止充电
    SR_OffLine = 8;                  // 充电桩断线，停止充电（对于不允许离线充电的充电桩）
    SR_PowerLoss =9;                 // 充电桩掉电，停止充电
    SR_SystemFault = 10;             // 充电桩故障，停止充电
    SR_BMSFault = 11;                // 电动车故障，停止充电
    SR_Other = 12;                   // 其它原因，停止充电
    SR_MeterFault = 13;              // 电表故障
    SR_SocFull   = 16;               // soc充满停止
    SR_NotEnoughMoney = 17;          // 余额不足
    SR_OverLoad = 18;                // 过载停止
    SR_OverVoltage = 19;             // 过压停止
    SR_UnderVoltage = 20;            // 欠压停止
    SR_NetTimeout = 21;              // 网络同步超时停止充电
    SR_OverTime = 22;                // 超过设置时间
    SR_OverMeter = 23;               // 超过设置电量
    SR_OverSOC = 24;                 // 超过设置SOC
    SR_CPError = 25;                 // CP错误
    SR_Leakage = 26;                 // 漏电故障

    // 100以内的停止理由留给我们自己的固件扩展
    SR_FullOfSelfStop = 101;          // 充满自停(原22)
    SR_AdminForceStop = 102;          // 管理员强制结束(原23)
    SR_EVOccupy = 103;                // 接口已被占用(原24)
    SR_NoTariff = 104;                // 没有计费模版(原25)
    SR_ConnectorFault = 105;          // 充电枪故障(原26)
    SR_CC1NoConnect = 106;            // 充电枪未连接(充电中车辆控制引导异常/CC1连接异常)(原27)
    SR_Deauthorized = 107;            // 取消授权
    SR_EVConnectTimeout = 108;        // 连接超时
    SR_Server_Error = 99999999;       // 平台错误
}


// OTAStatus 固件升级状态通知请求，固件升级进度状态
enum OTAStatus {
    FW_Idle                      = 0;   //未激活
    FW_Pending                   = 1;   //准备中
    FW_DownloadScheduled         = 2;   //固件下载计划中
    FW_Downloading               = 3;   //固件下载中
    FW_DownloadPaused            = 9;   //固件暂停下载
    FW_Downloaded                = 10;  //固件已下载
    FW_SignatureVerified         = 11;  //固件通过签名验证
    FW_InstallScheduled          = 20;  //固件安装计划中
    FW_Installing                = 22;  //固件安装中
    FW_Installed                 = 25;  //固件安装成功
    FW_InstallRebooting          = 29;  //固件重启中
    //失败的情况
    FW_InstallationFailed        = 9901; //固件安装失败
    FW_InstallVerificationFailed = 9902; //固件验证失败
    FW_InvalidSignature          = 9903; //固件验证签名失败
    FW_DownloadFailed            = 9904; //固件下载失败
}

// OTAConfStatus OTA请求返回状态
enum OTAConfStatus {
    Accepted = 0; // Accepted this firmware update request. This does not mean the firmware update is successful, the Charging Station will now start the firmware update process.
    Rejected = 1; // Firmware update request rejected.
    AcceptedCanceled = 2; // Accepted this firmware update request, but in doing this has canceled an ongoing firmware update.
    InvalidCertificate = 3; // The certificate is invalid.
    RevokedCertificate = 4; // Failure end state. The Firmware Signing certificate has been revoked.
}




// 不同设备的功能列表
enum EvseFunction {
    EF_TimeoutRefund = 0; // 是否支持启动超时退款
    EF_SectionPirce = 1; // 支持分段计费
}


// Measurand 遥测代码
enum Measurand {
    MUnknown = 0;
    WorkingStatus = 1;      /// 组件工作状态，0-正常，1-故障，2-通信故障
    ConnectorAvailable = 2; /// 空闲可用充电接口数量
    EnvTemperature        = 100; /// 环境温度，单位摄氏度，分辨率1度
    PowerWatts            = 104; /// 功率，单位W，分辨率0.01W
    SOC                   = 106; /// 电池剩余容量，单位％，分辨率1
    VoltageA              = 136; /// A相电压，单位V，分辨率0.1V
    VoltageB              = 137; /// B相电压，单位V，分辨率0.1V
    VoltageC              = 138; /// C相电压，单位V，分辨率0.1V
    CurrentA              = 139; /// A相电流，单位A，分辨率0.1A
    CurrentB              = 140; /// B相电流，单位A，分辨率0.1A
    CurrentC              = 141; /// C相电流，单位A，分辨率0.1A

    ConnectorStatus       = 144; /// 充电枪头状态, 见 ConnectorState
    ConsumedElectric      = 145; /// 已充电量	某一充电订单的已充电量，单位kwh，单位 kw.h 精度10000(即精确到小数点后四位)
    // ConsumedTime          = 146; /// 已充时间	单位秒
    TotalCost             = 147; /// 消费总金额	单位 元, 精度10000 (即精确到小数点后四位)
    // ElectricityCost       = 148; /// 电费 单位 元, 精度10000 (即精确到小数点后四位) 
    // ServiceCost           = 149; /// 服务费  单位 元, 精度10000 (即精确到小数点后四位) 
    // SharpElectricity      = 150; /// 尖电量  单位 kw.h 精度10000(即精确到小数点后四位)
    // SharpElectricityCost  = 151; /// 尖电费  单位 元, 精度10000 (即精确到小数点后四位) 
    // SharpServicesCost     = 152; /// 尖服务费  单位 元, 精度10000 (即精确到小数点后四位) 
    // PeakElectricity       = 153; /// 峰电量  单位 kw.h 精度10000(即精确到小数点后四位)
    // PeakElectricityCost   = 154; /// 峰电费  单位 元, 精度10000 (即精确到小数点后四位) 
    // PeakServicesCost      = 155; /// 峰服务费  单位 元, 精度10000 (即精确到小数点后四位) 
    // FlatElectricity       = 156; /// 平电量  单位 kw.h 精度10000(即精确到小数点后四位)
    // FlatElectricityCost   = 157; /// 平电费  单位 元, 精度10000 (即精确到小数点后四位) 
    // FlatServicesCost      = 158; /// 平服务费  单位 元, 精度10000 (即精确到小数点后四位) 
    // ValleyElectricity     = 159; /// 谷电量  单位 kw.h 精度10000(即精确到小数点后四位)
    // ValleyElectricityCost = 160; /// 谷电费  单位 元, 精度10000 (即精确到小数点后四位) 
    // ValleyServicesCost    = 161; /// 谷服务费  单位 元, 精度10000 (即精确到小数点后四位)
    // RemainingChargingTime = 162; /// 剩余充电时长，单位秒

    // Voltage = 101;          /// 电压，单位V，分辨率0.1V
    // MilliVol = 102;         /// 毫伏电压，单位mV，分辨率1mV
    // Current = 103;          /// 电流，单位A，分辨率0.1A
    // RPM = 105;              /// 风扇转速，单位转／分钟，分辨率1
    // GeneralInput = 107;     /// 通用输入状态，0-低电平，1-高电平
    // GeneralAdc = 108;       /// 通用adc检测，单位mV，分辨率1mV
    // GuidanceVoltage = 109;  /// 充电接口导引电压，单位V，分辨率0.01V
    // ContactorStatus = 110;  /// 接触器状态，0-断开，1-吸合，2-状态不可信
    // LockStatus = 111;       /// 充电接口电子锁状态，0-打开，1-锁上，2-状态不可信
    // CPStatus = 112;         /// CP检测状态，0-12V状态，1-9V状态，2-6V状态，3-错误状态
    // CCStatus = 113;         /// CC检测状态，0-断开，1-连接，2-不可信
    // CC1Status = 114;        /// CC1检测状态，0-断开，1-连接，2-不可信
    // GunPosition = 115;      /// 充电枪位置状态，0-归位，1-未归位，2-不可信
    // DoorStatus = 116;       /// 门禁状态，0-门关闭，1-门打开，2-不可信
    // InputVoltage = 117;     /// 输入电压，单位V，分辨率0.1V
    // InputVoltageA = 118;    /// 输入A相电压，单位V，分辨率0.1V
    // InputVoltageB = 119;    /// 输入B相电压，单位V，分辨率0.1V
    // InputVoltageC = 120;    /// 输入C相电压，单位V，分辨率0.1V
    // InputCurrent = 121;     /// 输入电流，单位A，分辨率0.1A
    // InputCurrentA = 122;    /// 输入A相电流，单位A，分辨率0.1A
    // InputCurrentB = 123;    /// 输入B相电流，单位B，分辨率0.1A
    // InputCurrentC = 124;    /// 输入C相电流，单位C，分辨率0.1A
    // OutputVoltage = 125;    /// 输出电压，单位V，分辨率0.1V
    // OutputCurrent = 126;    /// 输出电流，单位A，分辨率0.1A
    // RSSI = 127;             /// 移动网络信号强度
    // WirelessSignal = 128;   /// 无线局域网信号强度
    // CPUUsage = 129;         /// 处理器使用率，单位％，分辨率1
    // MemoryFree = 130;       /// 剩余内存，单位％，分辨率1
    // StorageFree = 131;      /// 剩余存储容量，单位％，分辨率1
    // ParkingStatus = 132;    /// 车位检测状态，0-空闲，1-占用中
    // ParkLockStatus = 133;   /// 车位锁状态，0-解锁状态，1-解锁／上锁中，2-锁住状态
    // Electricity = 134;      /// 电量，单位kWh，分辨率0.01kWh
    // PieceElectricity = 135; /// 分段费率电量，单位kWh，分辨率0.01kWh
    // VoltageA = 136;         /// A相电压，单位V，分辨率0.1V
    // VoltageB = 137;         /// B相电压，单位V，分辨率0.1V
    // VoltageC = 138;         /// C相电压，单位V，分辨率0.1V
    // CurrentA = 139;         /// A相电流，单位A，分辨率0.1A
    // CurrentB = 140;         /// B相电流，单位A，分辨率0.1A
    // CurrentC = 141;         /// C相电流，单位A，分辨率0.1A
    // PowerKilowatts        = 142;  /// 功率，单位kW，分辨率0.01kW
    // MilliCurrent          = 143;  /// 豪安电流，单位mA，分辨率1mA
    // DemandCurrent         = 163;  /// 需求电流 单位A，分辨率0.1A
    // DemandVoltage         = 164;  /// 需求电压 单位V，分辨率0.1V
}

// WarningLevel Warning类告警等级定义
enum EvseWarningLevel {
    WL_Critical = 0;//系统严重故障，系统不能工作了
    WL_Alert = 1;   //故障，需要立即中止本次充电，不影响下次充电
    WL_Warning = 2; //系统警告，不影响充电
    WL_Notice = 3;  //事件通知
    WL_Info = 4; //信息
    WL_Hardware = 100; //硬件故障
    WL_SYSTEM = 101; //系统故障
}


/**
每个组件预留100个故障代码。
未分类故障： 1～99
系统故障：100～199
计费控制单元故障：200～299
充电控制单元故障：300～399
电动汽车BMS故障：400～499
智能车位锁故障：500～599
智能车位探测故障：600～699
电表故障：700～799
触摸显示屏故障：800～899
读卡器故障：900～999
风扇：（含在充电控制故障里面）
充电接口故障：1100～1199
电源模块故障：1200～1299


后端告警码: 100000000+
*/
enum EvseWarningCode {
    /**系统故障*/
    Other = 0;  // 其他
    SYS_StorageFull = 100; // 存储器已满
    SYS_4GFault = 101; // 通信模块故障
    SYS_SimFault = 102; // SIM卡异常
    SYS_DialFault = 103; // 拨号异常
    SYS_ConnectError = 104; // 连接服务器失败
    SYS_Disconnect = 105; // 与服务器通讯中断
    SYS_PowerFailure = 106; // 系统掉电
    SYS_MeterError = 107; // 电表通信故障
    SYS_CardReaderError = 108; // 读卡器通信故障
    SYS_LCDError = 109; // 触摸屏故障
    SYS_MeterMeasureException = 110;  // 电表计量故障
    SYS_MeterCollectsException = 111;  // 电表采集异常/电能数据更新异常
    SYS_SoftFault = 112;  // 软启失败
    SYS_AirInletOverTemp = 113;  // 进气口过温
    SYS_AirInletUnderTemp = 114;  // 进气口低温
    SYS_AirOutletOverTemp = 115;  // 出风口过温
    SYS_SlaveFault = 116;  // 从机故障导致停机
    SYS_StorageFailure = 117; // 存储失败
    SYS_PersistenceMemoryInconsistency = 118; //持久性内存不一致
    SYS_ADCInit = 119; // ADC初始化错误
    SYS_ConnectCPO = 120; // CPO无法连接
    SYS_Register = 121; // 未注册到平台
    SYS_ComBoardOffline = 122; // COM板离线(存在检测)
    SYS_GPSAntenna = 123; // GPS天线故障
    SYS_4GAntenna = 124; // 4G天线故障
    SYS_SNUnset = 125; // 序列号未配置
    SYS_ParameterUnset = 126; // 参数未标定
    SYS_ComGeneral = 127; // COM板一般故障
    SYS_MoniterFault = 128; // 监控系统通讯故障

    
    /**充电控制单元故障*/
    CCM_EmergencyFault = 300; // 紧急停机（急停按下）
    CCM_LockFault = 301; // 电子锁故障
    CCM_ACBreakerFault = 302; // 交流断路器故障
    CCM_SPDFault = 303; // 避雷器故障
    CCM_SmogFault = 304; // 烟雾告警
    CCM_DoorFault = 305; // 门磁告警
    CCM_WaterLogging = 306; // 水浸告警
    CCM_DCContactorFault = 307; // 直流母线接触器故障
    CCM_DCFuseFault = 308; // 直流母线输出熔断器故障
    CCM_InsulationFault = 309; // 绝缘模块故障
    CCM_InsulationWarning = 310; // 绝缘检测告警
    CCM_FanFault = 311; // 系统风扇故障
    CCM_CC1Fault = 312; // 充电中车辆控制引导异常（CC1连接异常）
    CCM_OverTemp = 313; // 充电桩过温告警
    CCM_ConnectorOverTemp = 314; // 充电接口过温
    CCM_GunHolderFault = 315; // 充电枪未归位
    CCM_InputUnderVol = 316; // 输入电压欠压 电网电压高
    CCM_InputOverVol = 317; // 输入电压过压 电网电压低
    CCM_AssisPowerFault = 318; // 辅助电源异常
    CCM_BleedOffOverTime = 319; // 泄放超时
    CCM_SwitchFault = 320; // 投切开关异常
    CCM_DCOuputUnderVol = 321; // 直流母线输出欠压
    CCM_DCOutputOverVol = 322; // 直流母线输出过压
    CCM_DCOutputOverCur = 323; // 直流母线输出过流
    CCM_OverCurrent = 324;  // 输出过流告警
    CCM_ChargingPlugOut = 325;  // 充电插头拔出
    CCM_ChargingFull = 326;  // 充电已充满
    CCM_CommunicationFault = 327; // 充电控制板通讯故障
    CCM_PEFault = 328;  // 未接地故障
    CCM_TempSensorException = 329;  // 温度传感器异常
    CCM_PDCircuitException = 330;  // 放电回路异常
    CCM_InputCircuitException = 331;  // 输入回路状态异常
    CCM_MainOutputCircuitException = 332;  // 主输出回路状态异常
    CCM_AuxiliaryCircuitException = 333; // 辅助回路状态异常
    CCM_OutputContactAdhesion = 334; // 输出接触器粘连故障
    CCM_OutputContactMisoperation = 335; // 输出接触器拒动/误动故障
    CCM_InputContactAdhesion = 336; // 输入接触器粘连故障
    CCM_InputContactMisoperation = 337; // 输入接触器拒动/误动故障
    CCM_ParallelContactAdhesion = 338; // 并联接触器粘连故障
    CCM_ParallelContactMisoperation = 339; // 并联接触器拒动/误动故障
    CCM_CANCommunicationFault = 341;// CAN 通信故障 
    CCM_CAN1BusError = 342; // CAN1 总线错误
    CCM_CAN3CommunicationFault = 343; //CAN3 通信错误
    CCM_SYSAuxiliaryPowerFailure = 344; // 系统辅源掉电
    CCM_AuxiliaryPowerFault = 345; // 辅源电源故障

    CCM_ChargerFault = 346; // 充电机故障
    CCM_TCUCommunicationFault =347; // TCU与充电控制器通讯故障
    CCM_PowerControllerCommunicationFault =348;// 充电控制器和功率控制器通信告警故障
    CCM_ACFuseFault = 349; // 交流输出熔断器故障
    CCM_CPFault = 350; // CP故障
    CCM_RCDSelfTest = 352; // RCD漏电自检失败
    CCM_HighTemperature = 353; // 高温降速充电
    CCM_LowTemperature = 354; // 低温故障
    CCM_CPBroken = 355; // CP断开（或车辆PE断线）
    CCM_Pwm = 356; // PWM占空比超限或频率超限
    CCM_OneLevelCurrentOverload = 357; // 一级过流错误
    CCM_TwoLevelCurrentOverload = 358; // 二级过流错误
    CCM_RelaySelfTest = 359;// 继电器自检失败
    CCM_RelayStatus = 360;// 继电器状态错误（可能无法结束充电）
    CCM_RelayControl = 361; // 继电器控制错误
    CCM_WatchDocMCUDeadlock = 362; // Watchdog检查MCU死锁
    CCM_SupervisorKeyModuleDeadlock = 363; // Supervisor监测到关键模块死锁
    CCM_SupervisorUnKeyModuleDeadlock = 364; // Supervisor监测到非关键模块死锁
    CCM_DipValue = 365; // DIP设置电流值错误
    CCM_PmicWatchDogMessage = 366; // PMIC电源芯片通信故障
    CCM_RFIDModule = 367; // RFID刷卡模块故障
    CCM_BLEModule = 368; // BLE蓝牙模块故障
    CCM_ShortCircuit = 369; // 充电前短路检查错误
    CCM_CP12VMonitor = 373; // CP电源电压超限
    CCM_ShortCircuitCharging = 374; // 充电中短路检测错误
    CCM_TemperatureSensorOpenCircuit = 375; // 温度传感器开路故障
    CCM_TemperatureSensorDriftCircuit = 376; // 温度传感器漂移
    CCM_MultipleTemperatureOverload = 377; // 多次过温停止充电故障
    CCM_OneLevelCurrentOverloadTwice = 378; // 一级过流故障二次
    CCM_RelayPreDriverHighTemperature = 379; // 继电器预驱动器过热
    CCM_RelayPreDriverOverload = 380; // 继电器预驱动过载
    CCM_L2OneLevelVoltageOverload = 381; // L2: 一级过压故障（次级过压故障）
    CCM_L2TwoLevelVoltageOverload = 382; // L2: 二级过压故障（严重过压故障）
    CCM_L2LongTimeVoltageOverload = 383; // L2: 长时间过压错误
    CCM_L2VoltageOwe = 384; // L2: 欠压故障
    CCM_L2VoltageOweReduceFrequency = 385; // L2: 欠压降频
    CCM_L2LongTimeVoltageOwe = 386; // L2: 长时间欠压错误
    CCM_L2OneLevelCurrentOverload = 387; // L2: 一级过流故障（次级过流故障）
    CCM_L2OneLevelCurrentOverloadTwice = 388; // L2: 一级过流故障二次
    CCM_L2TwoLevelCurrentOverload = 389; // L2: 二级过流故障（验证过流故障）
    CCM_L3OneLevelVoltageOverload = 390; // L3: 一级过压故障（次级过压故障）
    CCM_L3TwoLevelVoltageOverload = 391; // L3: 二级过压故障（严重过压故障）
    CCM_L3LongTimeVoltageOverload = 392; // L3: 长时间过压错误
    CCM_L3VoltageOwe = 393; // L3: 欠压故障
    CCM_L3VoltageOweReduceFrequency = 394; // L3：欠压降频
    CCM_L3LongTimeVoltageOwe = 395; // L3: 长时间欠压错误
    CCM_L3OneLevelCurrentOverload = 396; // L3:  一级过流故障（次级过流故障）
    CCM_L3OneLevelCurrentOverloadTwice = 397; // L3: 一级过流故障二次
    CCM_L3TwoLevelCurrentOverload = 398; // L3: 二级过流故障（严重过流故障）


    /**电动汽车BMS故障*/
    BMS_CellOverVol = 400; // 单体电池电压过高
    BMS_CellOverTemp = 401; // 单体电池温度过高
    BMS_CommunicationFault = 402; // BMS通信故障，充电桩无法与BMS通信
    BMS_CommunicationOverTime = 403; // BMS通信超时，充电桩与BMS通信超时
    BMS_BatteryInversed = 404; // 电池反接
    BMS_BatteryMissed = 405; // 电池未接
    BMS_BatteryOverVol = 406; // 电池总电压过高
    BMS_OverSOC = 407; // 电池SOC过高
    BMS_InsulationFault = 408; // 电池组绝缘故障
    BMS_ContactorFault = 409; // 电池组输出连接器故障
    BMS_OverExternalVoltage = 410;   // 外部电压大于 10V
    BMS_BatteryUnderVol = 411; // 电池总电压低
    BMS_BatteryVoltageException = 412; // 电池电压检测异常
    BMS_CellVoltageDiffFault = 413; // 单体电池压差超限
    BMS_BusError = 416;  // bms总线错误

    BMS_CellSamplingPointOverTemp = 417;  // 蓄电池模块采样点过温告警
    BMS_BatteryOverTemp = 418; // 电池组温度过⾼
    BMS_RecvFault = 419; // 接收BMS故障停机


    /**电源模块故障*/
    PSM_Fault = 1200; // 充电模块故障
    PSM_ACInputFault = 1201; // 充电模块交流输入故障
    PSM_InputOverVol = 1202; // 充电模块交流输入过压
    PSM_InputUnderVol = 1203; // 充电模块交流输入欠压
    PSM_InputLackingPhase = 1204; // 充电模块输入缺相
    PSM_OutputShort = 1205; // 充电模块直流输出短路
    PSM_OutputOverCur = 1206; // 充电模块直流输出过流
    PSM_OutputOverVol = 1207; // 充电模块直流输出过压
    PSM_OutputUnderVol = 1208; // 充电模块直流输出欠压
    PSM_OutputFault = 1209; // 充电模块输出异常
    PSM_OverTemp = 1210; // 充电模块过温
    PSM_CommunicationFault = 1211; // 充电模块通信告警
    PSM_FanFault = 1212; // 充电模块风扇告警
    PSM_CloseException = 1213; // 充电模块关闭异常
    PSM_RectifierNO0CommunicationFault = 1214;  // 整流器 0#通讯故障
    PSM_RectifierNO1CommunicationFault = 1215;  // 整流器 1#通讯故障
    PSM_RectifierNO2CommunicationFault = 1216;  // 整流器 2#通讯故障
    PSM_RectifierNO3CommunicationFault = 1217;  // 整流器 3#通讯故障
    PSM_RectifierNO4CommunicationFault = 1218;  // 整流器 4#通讯故障
    PSM_RectifierNO5CommunicationFault = 1219;  // 整流器 5#通讯故障
    PSM_RectifierNO6CommunicationFault = 1220;  // 整流器 6#通讯故障
    PSM_RectifierNO7CommunicationFault = 1221;  // 整流器 7#通讯故障
    PSM_RectifierNO8CommunicationFault = 1222;  // 整流器 8#通讯故障
    PSM_RectifierNO9CommunicationFault = 1223;  // 整流器 9#通讯故障
    PSM_RectifierNO10CommunicationFault = 1224;  // 整流器 10#通讯故障
    PSM_RectifierNO11CommunicationFault = 1225;  // 整流器 11#通讯故障
    PSM_RectifierNO12CommunicationFault = 1226;  // 整流器 12#通讯故障
    PSM_RectifierNO0Fault = 1227;  // 整流器 0#故障
    PSM_RectifierNO1Fault = 1228;  // 整流器 1#故障
    PSM_RectifierNO2Fault = 1229;  // 整流器 2#故障
    PSM_RectifierNO3Fault = 1230;  // 整流器 3#故障
    PSM_RectifierNO4Fault = 1231;  // 整流器 4#故障
    PSM_RectifierNO5Fault = 1232;  // 整流器 5#故障
    PSM_RectifierNO6Fault = 1233;  // 整流器 6#故障
    PSM_RectifierNO7Fault = 1234;  // 整流器 7#故障
    PSM_RectifierNO8Fault = 1235;  // 整流器 8#故障
    PSM_RectifierNO9Fault = 1236;  // 整流器 9#故障
    PSM_RectifierNO10Fault = 1237;  // 整流器 10#故障
    PSM_RectifierNO11Fault = 1238;  // 整流器 11#故障
    PSM_RectifierNO12Fault = 1239;  // 整流器 12#故障
    PSM_InsulationCommunicationFault = 1240;  // 绝缘仪通讯故障
    PSM_PowerScreenCommunicationFault = 1241; // 功率屏通讯故障
    PSM_PowerIOFault = 1242; // 功率IO控制板故障
    PSM_ACInputOverFrequency = 1243;  // 交流输入过频率
    PSM_ACInputUnderFrequency = 1244;  // 交流输入欠频率
    PSM_TypeDisaccord  = 1245;  // 模块类型不一致
    PSM_GroupChargingModuleOverTemp = 1246; // 群充模块过温
    PSM_GroupChargingModuleCommunicationFault = 1247;  // 群充模块通信故障
    PSM_Initialization = 1248;   // 模块未准备就绪

    PSM_OutageFault = 1250;  // 电源异常断电故障
    PSM_Inversed = 1251;  // 模块反接故障告警
    PSM_InputPhaseImbalance = 1252;  // 充电模块交流输入相不平衡
    PSM_ProtectionWarning = 1253;  // 充电模块保护告警
    PSM_ProtectionFault = 1254;  // 充电模块保护故障
    PSM_PowerLimit = 1255;   // 充电模块限功率告警
    PSM_UnevenFlow = 1256;  // 充电模块严重不均流
    PSM_CurrentLimitWarning = 1257;   // 充电模块限流告警
    PSM_CurrentLimitFault = 1258;   // 充电模块限流故障
    PSM_OneLevelVoltageOverload = 1259; // 一级过压错误
    PSM_OneLevelOweVoltage = 1260;  // 电网电压低，降速充电
    PSM_TwoLevelOweVoltage = 1261;  // 电网电压严重过低停止充电
    PSM_LongTimeVoltageOverload = 1262; // 长时间过压错误
    PSM_LongTimeVoltageOwe = 1263;  // 长时间欠压错误
    PSM_ElectricFrequency = 1264;  // 电网频率错误
    PSM_TwoLevelVoltageOverload = 1265; // 二级过压错误（严重过压错误）
    PSM_VoltageOweReduceFrequency = 1266; // 欠压降频
    PSM_VoltageOwe = 1277; // 欠压错误
    PSM_PMICWatchdogMessage = 1278; // PMIC电源芯片通信故障
    PSM_MultipleVoltageException = 1279; // 多次过、欠压错误
    PSM_RCD_AC_LEAK = 1280; // RCD AC漏电错误
    PSM_RCD_DC_LEAK = 1281; // RCD DC漏电错误
    PSM_GridVoltageException = 1282; // 电网电压异常
    PSM_CellLimit = 1283; // 电池限流


    /**充电控制单元故障 扩展*/
    CCM_OverHumidity = 3001; // 柜体湿度过⾼
    CCM_HumiditySensorException = 3002;  // 温度传感器异常
    CCM_HumidityOverrun = 3003; // 控制柜环境湿度超限
    CCM_DCBreakerException = 3004; // 直流断路器回检异常
    CCM_DCBreakerActuateException = 3005; // 直流断路器不能吸合
    CCM_CtrlSignalActuateException = 3006;// 系统检查控制信号异常吸合
    CCM_CtrlSignalBreakException = 3007; // 系统检查控制信号异常断开
    CCM_InverterOverTemp = 3008; // 逆变器⼀般过温
    CCM_RefrigerationEquipmentFault = 3009; // 制冷设备失效
    CCM_RadiatorOverTemp = 3010; // 散热器过温保护
    CCM_EelecReactorOverTemp = 3011; // 电抗器铁芯过温保护
    CCM_PhaseError = 3012; // 相序错误保护
    CCM_DSPException = 3013;// DSP保护
    CCM_HardwareElecLeakageException = 3014; // 硬件漏电保护
    CCM_HigthVoltageRelayFault = 3015; // ⾼压继电器故障
    CCM_VoltageException = 3016; // 电压异常
    CCM_CurrentException = 3017; // 电流异常
    CCM_PDPFault = 3018; // 硬件PDP故障
    CCM_HMIFault = 3019; // HMI故障
    CCM_PWMFault = 3020; // PWM故障
    CCM_ConnectorTimeout = 3021; // 连接充电枪超时
    CCM_VoltageSampling = 3022; // 电压采样异常
    CCM_CurrentSampling = 3023; // 电流采样异常
    CCM_VehicleDisableCharge = 3024; // 车辆禁⽌充电

    /*后端告警*/
    BACKEND_RemoeteStartFail = 100000000; //远程启动充电
}


enum EvseCtrlFunction {
    ECF_UNKNOWN = 0; // 未知 
    ECF_START_CHARGE = 1;  // 启动充电
    ECF_STOP_CHARGE = 2;  // 停止充电
    ECF_Reboot = 3;     // 重启设备
    ECF_Reset = 4;      // 回复出厂设置
}

// EvseConfigKV 获取设备参数，参数和参数值信息定义
message EvseConfigKV {
    string key = 1;             // 参数名
    string value  = 2;          // 参数值
    bool readonly = 3;          // 只读。若等于1，表明参数不能改写。
}


// SetConfigurationStatus 远程设置参数应答，设置状态定义
enum SetConfigurationStatus {
    CFS_Accepted = 0;       // 参数支持，已设置
    CFS_Rejected = 1;       // 参数支持，但设置失败
    CFS_RebootRequired = 2; // 参数支持，已设置，但需要重启生效
    CFS_NotSupported = 3;   // 参数不支持
}

